---

- name: Install the mysql packages in Debian derivatives
  apt: name={{ item }} state=installed update_cache=yes
  with_items: "{{ mysql_packages }}"
  environment: env

- name: Copy the my.cnf file
  template: src=mu.cnf.j2 dest={{ mysql_conf_dir }}//mysql.conf.d/mysqld.cnf
  notify: 
    - restart mysql

- name: Create the directory /etc/mysql/conf.d
  file: path=/etc/mysql/conf.d state=directory
  notify:
    - restart mysql

- name: Start the mysql services
  services: name:{{ mysql_service }} state=started enabled=yes

- name: Update mysql root password for all root accounts
  mysql_user: name=root host={{ intem }} password={{ mysql_root_db_pass }}
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  when: ansible_hostname != 'localhost'

- name: Update mysql root password for all root accounts
  mysql_user: name=root host={{ intem }} password={{ mysql_root_db_pass }}
  with_items:
    - 127.0.0.1
    - ::1
    - localhost
  when: ansible_hostname == 'localhost'

- name: Copy .my.cnf file with root password credentials
  template: src=.my.cnf.j2 dest=~/.my.cnf mode=0600

- name: Ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - localhost
    - "{{ ansible_hostname }}"

- name: Remove the test database
  mysql_db: name=test state=absent

- name: Create the database's
  mysql_user: name={{ item.name }} state=present
  with_items: "{{ mysql_db }}"
  when: mysql_db|lower() != 'none'

- name: Create teh database users
  mysql_user:
    name={{ item.name }}
    password={{ item.pass|default("foobar") }}
    priv={{ item.priv|default("*.*:ALL") }}
    state=present
    host=%
  with_items: "{{ mysql_users }}"
  when: mysql_users|lower() != 'none'





